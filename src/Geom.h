class Geom {
    public:
        Geom(Topo* _topo);
        ~Geom();
        int pi;
        int nl;
        int n0;
        int nDofsX;
        int* loc0;
        int* inds0_l;
        int* inds0_g;
        int n0l;
        int nDofs0G;
        double** x;
        double** s;
        double** det;
        double**** J;
        Topo* topo;
        GaussLobatto* quad;
        LagrangeNode* node;
        LagrangeEdge* edge;
        void interp0(int ex, int ey, int px, int py, double* vec, double* val);
        void interp1_l(int ex, int ey, int px, int py, double* vec, double* val);
        void interp2_l(int ex, int ey, int px, int py, double* vec, double* val);
        void interp1_g(int ex, int ey, int px, int py, double* vec, double* val);
        void interp2_g(int ex, int ey, int px, int py, double* vec, double* val);
        void write0(Vec q, char* fieldname, int tstep);
        void write1(Vec u, char* fieldname, int tstep);
        void write2(Vec h, char* fieldname, int tstep);
        void initJacobians();
        void updateGlobalCoords();
        int* elInds0_l(int ex, int ey);
        int* elInds0_g(int ex, int ey);
        IS is_l_0;
        IS is_g_0;
        VecScatter gtol_0;
	double** xi_coarse;
        void _Jacobian(double* c1, double* c2, double* c3, double* c4, double* xi, double* jac);
        double _LocalToGlobal(double* c1, double* c2, double* c3, double* c4, double* xi, double* si);
        bool _FindLocal(double* c1, double* c2, double* c3, double* c4, double*  theta_i, double* xi);
        void coarseGlobalToLocal();
    private:
        void jacobian(int ex, int ey, int qx, int qy, double** J);
        double jacDet(int ex, int ey, int qx, int qy, double** J);
};
